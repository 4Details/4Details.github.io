<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>王旭的博客</title>
  
  
  <link href="http://yoursite.com/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-08-29T15:41:23.524Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>wangxu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>回文串引发的“血案”</title>
    <link href="http://yoursite.com/2020/08/28/%E5%9B%9E%E6%96%87%E4%B8%B2%E5%BC%95%E5%8F%91%E7%9A%84%E2%80%9C%E8%A1%80%E6%A1%88%E2%80%9D/"/>
    <id>http://yoursite.com/2020/08/28/%E5%9B%9E%E6%96%87%E4%B8%B2%E5%BC%95%E5%8F%91%E7%9A%84%E2%80%9C%E8%A1%80%E6%A1%88%E2%80%9D/</id>
    <published>2020-08-28T22:10:52.000Z</published>
    <updated>2020-08-29T15:41:23.524Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简单枚举"><a href="#简单枚举" class="headerlink" title="简单枚举"></a>简单枚举</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 基于中心线枚举</span></span><br><span class="line">Class Solution:</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">longestPalindrome</span>(<span class="params">self,s</span>):</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> s:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">        </span><br><span class="line">        self.start, self.longest = <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> middle <span class="keyword">in</span> range(len(s)):</span><br><span class="line">            self.find_longest_palidrome_from(s, middle, middle)</span><br><span class="line">            self.find_longest_palidrome_from(s, middle, middle+<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> s[self.start:self.start + self.longest]</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">find_longest_palidrome_from</span>(<span class="params">self, s, left, right</span>):</span></span><br><span class="line">        <span class="keyword">while</span> left &gt;= <span class="number">0</span> <span class="keyword">and</span> right &lt; len(s) <span class="keyword">and</span> s[left] == s[right]:</span><br><span class="line">            left -= <span class="number">1</span></span><br><span class="line">            right += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> self.longest &lt; right -left <span class="number">-1</span>:</span><br><span class="line">            self.longest = right - left <span class="number">-1</span></span><br><span class="line">            self.start = left +<span class="number">1</span></span><br></pre></td></tr></table></figure><h1 id="动态规划"><a href="#动态规划" class="headerlink" title="动态规划"></a>动态规划</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 基于动态规划（区间型：从小到大枚举区间）</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">longestPalindrome</span>(<span class="params">self, s</span>):</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> s:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">        </span><br><span class="line">        n = len(s)</span><br><span class="line">        is_palindrome = [[<span class="literal">False</span>] * n <span class="keyword">for</span> _ <span class="keyword">in</span> range(n)]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n):</span><br><span class="line">            is_palindrome[i][i] = <span class="literal">True</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, n):</span><br><span class="line">            is_palindrome[i][i<span class="number">-1</span>] = <span class="literal">True</span></span><br><span class="line">        </span><br><span class="line">        start, longest = <span class="number">0</span>, <span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> length <span class="keyword">in</span> range(<span class="number">2</span>, n<span class="number">-1</span>):</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(n - length + <span class="number">1</span>):</span><br><span class="line">                j = i + length <span class="number">-1</span></span><br><span class="line">                is_palindrome[i][j] = is_palindrome[i+<span class="number">1</span>][j<span class="number">-1</span>] <span class="keyword">and</span> s[i] == s[j]</span><br><span class="line">                <span class="keyword">if</span> is_palindrome[i][j] <span class="keyword">and</span> length &gt; longest:</span><br><span class="line">                    longest = length</span><br><span class="line">                    start = i</span><br><span class="line">         <span class="keyword">return</span> s[start:start + longest]</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;简单枚举&quot;&gt;&lt;a href=&quot;#简单枚举&quot; class=&quot;headerlink&quot; title=&quot;简单枚举&quot;&gt;&lt;/a&gt;简单枚举&lt;/h1&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;p</summary>
      
    
    
    
    <category term="算法笔记" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="回文串" scheme="http://yoursite.com/tags/%E5%9B%9E%E6%96%87%E4%B8%B2/"/>
    
    <category term="动态规划" scheme="http://yoursite.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>FATE 1.2 实践02-FATE集群部署</title>
    <link href="http://yoursite.com/2020/08/27/FATE-1-2-%E5%AE%9E%E8%B7%B502%EF%BC%9AFATE%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/"/>
    <id>http://yoursite.com/2020/08/27/FATE-1-2-%E5%AE%9E%E8%B7%B502%EF%BC%9AFATE%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/</id>
    <published>2020-08-27T13:49:03.000Z</published>
    <updated>2020-08-29T15:41:23.524Z</updated>
    
    <content type="html"><![CDATA[<h1 id="配置FATE环境"><a href="#配置FATE环境" class="headerlink" title="配置FATE环境"></a>配置FATE环境</h1><p>第1步中虚拟机创建完成后的信息如下</p><table><thead><tr><th>主机名</th><th>host155</th><th>guest156</th><th>guest157</th></tr></thead><tbody><tr><td>IP</td><td>192.168.119.155</td><td>192.168.119.156</td><td>192.168.119.157</td></tr><tr><td></td><td></td><td></td><td></td></tr></tbody></table><p>下面的步骤均是依据官方文档操作 </p><h2 id="基础环境配置"><a href="#基础环境配置" class="headerlink" title="基础环境配置"></a>基础环境配置</h2><p>注意：不特殊说明，下面配置需要在所有机器上操作！！</p><p>由于在创建虚拟机过程中已经更改过每台主机名、创建用户app，所以文档中hostname配置可跳过。</p><p>root权限下创建文件夹  /data/projects 归属 app用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;切换root用户，-p创建文件夹，给app用户赋予权限</span><br><span class="line">su root</span><br><span class="line">mkdir -p &#x2F;data&#x2F;projects</span><br><span class="line">chown -R app &#x2F;data&#x2F;projects</span><br></pre></td></tr></table></figure><h3 id="关闭selinux"><a href="#关闭selinux" class="headerlink" title="关闭selinux"></a>关闭selinux</h3><p>确认是否已安装selinux</p><p>centos系统执行：rpm -qa | grep selinux</p><p>ubuntu系统执行：apt list –installed | grep selinux</p><p>如果已安装了selinux就执行：setenforce 0</p><p><img src="/images/FATE-1-2-%E5%AE%9E%E8%B7%B502%EF%BC%9AFATE%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2.assets/1578365450270-a035c23e-1738-417f-89d1-fa1e9456064c.png" alt="关闭selinux"></p><h3 id="修改Linux最大打开文件数"><a href="#修改Linux最大打开文件数" class="headerlink" title="修改Linux最大打开文件数"></a>修改Linux最大打开文件数</h3><p>切换root用户，在limits.conf文件最后添加5、6行代码，保存退出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">su root</span><br><span class="line"></span><br><span class="line">vim &#x2F;etc&#x2F;security&#x2F;limits.conf</span><br><span class="line"></span><br><span class="line">* soft nofile 65536</span><br><span class="line">* hard nofile 65536</span><br></pre></td></tr></table></figure><p><img src="/images/FATE-1-2-%E5%AE%9E%E8%B7%B502%EF%BC%9AFATE%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2.assets/1578365728781-dc1352aa-9d0c-4400-81a4-1e28ecca6bcd.png" alt="编辑最大打开文件数"></p><h3 id="添加主机映射"><a href="#添加主机映射" class="headerlink" title="添加主机映射"></a>添加主机映射</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;hosts</span><br></pre></td></tr></table></figure><p><img src="/images/FATE-1-2-%E5%AE%9E%E8%B7%B502%EF%BC%9AFATE%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2.assets/1578485849702-675aea11-871a-4201-8868-bc0a2653849d.png" alt="添加主机映射"></p><h3 id="关闭虚拟机防火墙"><a href="#关闭虚拟机防火墙" class="headerlink" title="关闭虚拟机防火墙"></a>关闭虚拟机防火墙</h3><p>在实际生产环境中需要配置防火墙端口规则！虚拟机环境下采用关闭防火墙的方式。</p><p>如果是Centos系统：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl disable firewalld.service</span><br><span class="line">systemctl stop firewalld.service</span><br><span class="line">systemctl status firewalld.service</span><br></pre></td></tr></table></figure><p>本例的环境是Centos系统</p><p><img src="/images/FATE-1-2-%E5%AE%9E%E8%B7%B502%EF%BC%9AFATE%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2.assets/1578380317690-ecb24d9b-0cf9-47df-b92e-03330fbd8e92.png" alt="关闭虚拟机防火墙"></p><p>如果是Ubuntu系统：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ufw disable</span><br><span class="line">ufw status</span><br></pre></td></tr></table></figure><h3 id="给用户赋予sudo权限"><a href="#给用户赋予sudo权限" class="headerlink" title="给用户赋予sudo权限"></a>给用户赋予sudo权限</h3><p>root用户下对app用户赋予sudo权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;sudoers.d&#x2F;app</span><br><span class="line"></span><br><span class="line">app ALL&#x3D;(ALL) ALL</span><br><span class="line">app ALL&#x3D;(ALL) NOPASSWD: ALL</span><br><span class="line">Defaults !env_reset</span><br></pre></td></tr></table></figure><h3 id="配置ssh远程登录"><a href="#配置ssh远程登录" class="headerlink" title="配置ssh远程登录"></a>配置ssh远程登录</h3><p><strong>a. 切换app用户，生成rsa_id，具体根据下面代码</strong></p><p><img src="/images/FATE-1-2-%E5%AE%9E%E8%B7%B502%EF%BC%9AFATE%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2.assets/1578380760894-2368928b-1570-451c-aac0-649a1afbcacd.png" alt="配置ssh登录01"></p><p><strong>b.合并id_rsa_pub文件</strong></p><p><strong>步骤如下：三台机器分别将id_rsa.pub 写入authorized_keys文件中并且赋予权限chomd 600</strong></p><p><img src="/images/FATE-1-2-%E5%AE%9E%E8%B7%B502%EF%BC%9AFATE%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2.assets/1578381412726-a1b69944-771d-4101-84ab-1f984304c52a.png" alt="配置ssh登录02"></p><p>155通过scp将authorized_keys文件发送到156上，并将156的id_rsa.pub文件写入，然后将生成的新文件发送至157上，并且写入157生成的id_rsa.pub文件，将最终生成的authorized_keys文件发送给155和156，此时通过ssh即可登录（在发送文件过程中建立连接需要输入密码）</p><p>155-&gt;156</p><p><img src="/images/FATE-1-2-%E5%AE%9E%E8%B7%B502%EF%BC%9AFATE%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2.assets/1578381586236-3903e88e-0851-43ea-9d00-aeff64e00d90.png" alt="155-&gt;156"></p><p>156写入， -&gt;157</p><p><img src="/images/FATE-1-2-%E5%AE%9E%E8%B7%B502%EF%BC%9AFATE%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2.assets/1578381654023-9f91941b-d097-4fee-abef-b1c2e5dae98d.png" alt="156-&gt;157"></p><p>157写入，-&gt;155  -&gt;156</p><p><img src="/images/FATE-1-2-%E5%AE%9E%E8%B7%B502%EF%BC%9AFATE%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2.assets/1578381710128-b920208b-7d45-48a8-887f-c2dbdab925e6.png" alt="157-&gt;155 156"></p><p><strong>上述完成之后即可通过  ssh usernane@ip访问某台虚拟机</strong></p><p>需要注意的是，访问自身需要重新建立一个连接。</p><p>建议配置以上步骤之后拍摄虚拟机快照，便于后期恢复重新部署。</p><h2 id="FATE部署"><a href="#FATE部署" class="headerlink" title="FATE部署"></a>FATE部署</h2><p>完成基础环境配置之后，接下来就需要部署FATE的运行环境，本例使用的是<a href="https://github.com/FederatedAI/FATE/blob/master/cluster-deploy/doc/Fate-cluster_deployment_guide_install_zh.md">Installation</a>文档。</p><p>下面的操作<strong>只需在其中一台机器操作即可</strong>，本例选用的是host 155。</p><h3 id="下载压缩包"><a href="#下载压缩包" class="headerlink" title="下载压缩包"></a>下载压缩包</h3><p>可以使用wget下载，也可以直接通过<a href="https://webank-ai-1251170195.cos.ap-guangzhou.myqcloud.com/FATE_install_v1.2.0.tar.gz">链接</a>下载。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;data&#x2F;projects</span><br><span class="line">wget https:&#x2F;&#x2F;webank-ai-1251170195.cos.ap-guangzhou.myqcloud.com&#x2F;FATE_install_v1.2.0.tar.gz</span><br><span class="line">tar -xf FATE_install_v1.2.0.tar.gz</span><br></pre></td></tr></table></figure><p><img src="/images/FATE-1-2-%E5%AE%9E%E8%B7%B502%EF%BC%9AFATE%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2.assets/1578399494803-2fb7d502-0815-4840-82f0-a68e4e8110dc.png" alt="下载压缩包并解压"></p><h3 id="修改configuration文件"><a href="#修改configuration文件" class="headerlink" title="修改configuration文件"></a>修改configuration文件</h3><p>可以使用vim，也可以直接使用编辑器打开并修改。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;data&#x2F;projects&#x2F;FATE&#x2F;cluster-deploy&#x2F;script</span><br><span class="line">vi multinode_cluster_configuration.sh</span><br></pre></td></tr></table></figure><p><img src="/images/FATE-1-2-%E5%AE%9E%E8%B7%B502%EF%BC%9AFATE%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2.assets/1578399969465-c030b14f-baac-4dc3-ba3b-96fdbb9150ba.png" alt="修改conf文件"></p><p><img src="/images/FATE-1-2-%E5%AE%9E%E8%B7%B502%EF%BC%9AFATE%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2.assets/1578399984843-bece1ed0-8147-4754-9ba9-14014be1d75b.png" alt="b端配置"></p><p>建议在部署之前拍摄快照，为防止在部署过程中因某些配置出错造成部署失败。</p><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><p>本例中选择在各机器上部署所有组件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd FATE&#x2F;cluster-deploy&#x2F;scripts</span><br><span class="line"># 部署所有组件</span><br><span class="line">bash deploy_cluster_multinode.sh binary all </span><br><span class="line"># 只部署部分组件(可选：jdk python mysql redis fate_flow federatedml fateboard proxy federation roll meta-service egg)：</span><br><span class="line">bash deploy_cluster_multinode.sh binary fate_flow</span><br></pre></td></tr></table></figure><p>-———————————————————————————————————————-</p><p>———————————————–漫长地等待过程——————————————————–</p><p>-———————————————————————————————————————-</p><p>（部署时间暂未统计，时间需要2-4个小时，记录下了部署过程中终端产生的日志）</p><p>此处为语雀文档，点击链接查看：<a href="https://www.yuque.com/u190689/qoiq3w/seeq38">https://www.yuque.com/u190689/qoiq3w/seeq38</a></p><h2 id="配置检查"><a href="#配置检查" class="headerlink" title="配置检查"></a>配置检查</h2><p>请务必详细对照检查！！！</p><p>到各个目标服务器上进行检查对应模块的配置是否准确，每个模块的对应配置文件所在路径可在此配置文件下查看，参考：<a href="https://github.com/FederatedAI/FATE/blob/master/cluster-deploy/doc/configuration.md">https://github.com/FederatedAI/FATE/blob/master/cluster-deploy/doc/configuration.md</a></p><p>至此，FATE v1.2的安装部署全部结束，接下来测试环境。</p><p>建议部署成功之后拍摄快照，便于将来找到还原点。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;配置FATE环境&quot;&gt;&lt;a href=&quot;#配置FATE环境&quot; class=&quot;headerlink&quot; title=&quot;配置FATE环境&quot;&gt;&lt;/a&gt;配置FATE环境&lt;/h1&gt;&lt;p&gt;第1步中虚拟机创建完成后的信息如下&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th</summary>
      
    
    
    
    <category term="联邦学习" scheme="http://yoursite.com/categories/%E8%81%94%E9%82%A6%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="FATE" scheme="http://yoursite.com/tags/FATE/"/>
    
    <category term="FL" scheme="http://yoursite.com/tags/FL/"/>
    
  </entry>
  
  <entry>
    <title>FATE 1.2 实践01-虚拟机安装</title>
    <link href="http://yoursite.com/2020/08/27/FATE-1-2-%E5%AE%9E%E8%B7%B501%EF%BC%9A%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85/"/>
    <id>http://yoursite.com/2020/08/27/FATE-1-2-%E5%AE%9E%E8%B7%B501%EF%BC%9A%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85/</id>
    <published>2020-08-27T10:10:29.000Z</published>
    <updated>2020-08-29T15:41:23.524Z</updated>
    
    <content type="html"><![CDATA[<h1 id="创建虚拟机"><a href="#创建虚拟机" class="headerlink" title="创建虚拟机"></a>创建虚拟机</h1><h2 id="新建虚拟机"><a href="#新建虚拟机" class="headerlink" title="新建虚拟机"></a>新建虚拟机</h2><p>使用VMWare WorkStation创建虚拟机（单机版只需要一台机器，集群版可以使用多台机器，下面示例中创建了3台虚拟机，配置均为 300G，16GB，4核处理器，系统镜像为 CentOS-7-x86_64-DVD-1810版本）</p><p>![新建向导1-创建包含空白硬盘的虚拟机](/images/FATE 1.2 实践01-虚拟机安装/1578211619356-f76a066f-77d1-4e59-bac3-c373a9822dca.png)</p><p>![新建向导2-选择客户机操作系统](/images/FATE 1.2 实践01-虚拟机安装/1578211631941-df372176-acae-452f-aba5-e354012fe5f3.png)</p><p>![新建向导3-命名虚拟机](/images/FATE 1.2 实践01-虚拟机安装/1578211648272-b1667e39-59da-47c9-a326-d6dee2a57c01.png)</p><p>![新建向导4-指定磁盘容量](/images/FATE 1.2 实践01-虚拟机安装/1578211986949-3b397809-17f7-4da8-adbb-5a9bf005419d.png)                         </p><p>![新建向导5-配置硬件信息](/images/FATE 1.2 实践01-虚拟机安装/1578212074493-4a7b30de-9d8b-4179-83cf-65770884ea44.png)</p><p>![新建向导5-配置硬件信息](/images/FATE 1.2 实践01-虚拟机安装/1578212497000-3b362b69-9acc-457f-8827-ebf3551f3858.png)</p><p>![虚拟机详细配置信息](/images/FATE 1.2 实践01-虚拟机安装/1578212160231-787ca313-3b1c-408e-a053-e2ef15489642.png)                                       </p><h2 id="配置操作系统"><a href="#配置操作系统" class="headerlink" title="配置操作系统"></a>配置操作系统</h2><p><strong>启动虚拟机，加载并配置操作系统</strong></p><p>![选择默认语言](/images/FATE 1.2 实践01-虚拟机安装/1578212891912-86368f3c-b915-4e88-8429-94eadfdb17f8.png)     </p><p>  ![image.png](/images/FATE 1.2 实践01-虚拟机安装/1578213042405-3d3882a5-eba1-4c84-b1e4-ccbab97de9d7.png)</p><p>此处选择默认语言为【简体中文】，可以直接在编辑框输入快速查找。下一步则需要配置系统的软件、磁盘分区、网络等信息。</p><p>![详细配置](/images/FATE 1.2 实践01-虚拟机安装/1578213182245-ffd02e18-c25e-4678-9f01-2e739060c606.png)</p><p>这里需要注意的是详细配置图中标注的1，2，3。本例中详细的配置如下：</p><p>![软件选择](/images/FATE 1.2 实践01-虚拟机安装/1578213258382-d9854dc5-5778-4f2c-967e-8480f72425bb.png)</p><p>本例中选择的是GNOME桌面版的软件，已选环境附加选项可根据实际需要选择，选择桌面版的可视化环境有利于后续工作的进行。下一步选择安装目标位置中提前配置分区信息尤为重要！！！</p><p>![安装目标位置1-重新配置分区](/images/FATE 1.2 实践01-虚拟机安装/1578213312407-738ef352-50ea-40f5-8c5e-e7b8979be917.png)</p><p>![安装目标位置2-选择自动创建分区](/images/FATE 1.2 实践01-虚拟机安装/1578213342097-9320d6a9-2d4f-4b79-ae7f-65ee9738202c.png)</p><p>![安装目标位置3-重新配置分区磁盘](/images/FATE 1.2 实践01-虚拟机安装/1578213415357-a2e519d4-f0ef-4c11-87fd-c2c56b5fa507.png)</p><p>官方文档中建议全部磁盘挂载到新建的用户app下，但是本例中将大部分磁盘挂载到root下，经实践是有效的，在如上配置之后点击【完成】即可完成磁盘及分区的配置。</p><p>下一步需要提前完成系统网络信息的配置，如主机名、ip、子网掩码、DNS、路由信息等。</p><p>![配置主机名](/images/FATE 1.2 实践01-虚拟机安装/1578213943847-be3ce5b6-ed0f-4881-b5b9-70a653ffe581.png)</p><p>点击【配置】可进入ip、DNS等信息的配置。</p><p>![网络信息详细配置](/images/FATE 1.2 实践01-虚拟机安装/1578214029364-e40dc499-9843-4930-8cc8-bbe7a45cb666.png)</p><p>在上图的配置中需要注意的是，选择手动配置IPv4的信息，地址、子网掩码和网关需要配置正确，本例中DNS服务器默认为网关信息。网络信息配置完成之后可以【开启】以太网的连接，详细的信息可以参考下图</p><p>![网络配置详细信息](/images/FATE 1.2 实践01-虚拟机安装/1578214278690-9d37e778-1145-42b9-916d-e61d53b056c5.png)</p><p>1，2，3的所有信息完成配置之后点击【开始安装】则进入安装界面，此时可以配置系统root用户的密码以及新建用户。本例中遵循官方文档创建用户 app，在“高级用户配置”中，编辑app分属apps组，用户id为6000。</p><p>![安装进度页面](/images/FATE 1.2 实践01-虚拟机安装/1578214428608-d9cd0512-bddb-4fc7-b022-67dfd3849d0f.png)</p><p>![高级用户配置](/images/FATE 1.2 实践01-虚拟机安装/1578214478054-80630f51-9a98-42ed-a785-42b58a0d1312.png)</p><p>等待安装完成，【重启】即可进入桌面版的centos7 操作系统。</p><p>![等待重启](/images/FATE 1.2 实践01-虚拟机安装/1578215717450-609c6d2b-2ceb-449c-86fd-0ef8daecbce6.png)</p><p>初始设置需要接受许可证协议，【完成配置】即可登录输入密码，进入系统。</p><p>![许可证](/images/FATE 1.2 实践01-虚拟机安装/1578215847178-545b18e3-a15b-4a0d-9475-ee1bbb3631f2.png)</p><p><strong>提示：</strong>在实际操作中无需一步步按照上述步骤创建三台或多台虚拟机，在创建完成一台虚拟机之后可以通过“克隆”操作得到已安装完成的虚拟机镜像，这样可以在一定程度上节约创建虚拟机的时间，需要注意的是，在克隆完成启动之前需要重新生成机器的mac地址，否则会造成mac冲突。因为原始虚拟机使用的是静态地址，所以在开启之后需要重新对副本虚拟机分配静态IP。</p><p>克隆方法主要是： 点击 <strong>虚拟机-管理-克隆</strong>  使用克隆虚拟机向导</p><p>![克隆虚拟机01](/images/FATE 1.2 实践01-虚拟机安装/1578289326701-c9d9cbf8-c722-417d-9fc2-2778a37041c1.png)</p><p>![克隆虚拟机02](/images/FATE 1.2 实践01-虚拟机安装/1578289363276-dbcda949-dd42-465c-a981-1dfe75e101c6.png)</p><p>![克隆虚拟机03](/images/FATE 1.2 实践01-虚拟机安装/1578289390103-91ec1bac-0ad9-412a-94a2-6b5343a850f5.png)</p><p><strong>重命名和选择虚拟机所在路径之后点击【完成】即可。</strong></p><p>![重命名01](/images/FATE 1.2 实践01-虚拟机安装/1578289456259-1bf9f72d-24df-4056-8b78-91206ac8723f.png)</p><p>![重命名02](/images/FATE 1.2 实践01-虚拟机安装/1578289469898-3cf24c9f-9555-4a20-8bcd-d0e4de56eefd.png)</p><p>![克隆完成后的配置](/images/FATE 1.2 实践01-虚拟机安装/1578287585987-8c999e3a-1337-4548-8d74-3c08fe796f02.png)</p><p>打开虚拟机之后可以使用  ifconfig查看网络配置信息</p><p>![查看配置](/images/FATE 1.2 实践01-虚拟机安装/1578288131550-c9753bd9-6886-4dd4-9ce6-bc87971b482b.png)</p><p>需要更改的信息有 主机名、ip</p><p>![修改信息01](/images/FATE 1.2 实践01-虚拟机安装/1578288307841-e6299fea-87c6-41fe-822f-6649e02f4d8e.png)</p><p>配置IP信息主要路径在 /etc/sysconfig/network-script，修改 sysconf-ens33 （ens33指的是网卡名称）</p><p>文件中可以修改的有是否静态ip，PROTO一项改为 static  配置ip地址，子网掩码，网关，dns</p><p>![修改信息02](/images/FATE 1.2 实践01-虚拟机安装/1578288596711-36122905-dd83-4146-9119-abbe8de4ae92.png)</p><p>进入编辑页面</p><p>![修改信息03](/images/FATE 1.2 实践01-虚拟机安装/1578288653339-0a91cfbd-67ba-482a-a533-dac9fe4a1c67.png)</p><p>半角状态输入’i’可修改内容，修改完成如下，Esc退出编辑，”:wq”可以保存修改并退出vim编辑页面</p><p>![修改信息04](/images/FATE 1.2 实践01-虚拟机安装/1578288819423-b94e630c-3bc7-4c08-9f67-cde7aba7af8e.png)</p><p>重启之后使用ifconfig查看，ip已经改变。</p><p>克隆得到另外两台虚拟机，按上述步骤修改IP信息之后即完成了本例中的创建虚拟机步骤。</p><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;创建虚拟机&quot;&gt;&lt;a href=&quot;#创建虚拟机&quot; class=&quot;headerlink&quot; title=&quot;创建虚拟机&quot;&gt;&lt;/a&gt;创建虚拟机&lt;/h1&gt;&lt;h2 id=&quot;新建虚拟机&quot;&gt;&lt;a href=&quot;#新建虚拟机&quot; class=&quot;headerlink&quot; title=&quot;新建虚</summary>
      
    
    
    
    <category term="联邦学习" scheme="http://yoursite.com/categories/%E8%81%94%E9%82%A6%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="FATE" scheme="http://yoursite.com/tags/FATE/"/>
    
    <category term="FL" scheme="http://yoursite.com/tags/FL/"/>
    
  </entry>
  
  <entry>
    <title>找不到请求的.Net Framework Data Provider.可能没有安装.  错误</title>
    <link href="http://yoursite.com/2019/07/27/%E6%89%BE%E4%B8%8D%E5%88%B0%E8%AF%B7%E6%B1%82%E7%9A%84-Net-Framework-Data-Provider-%E5%8F%AF%E8%83%BD%E6%B2%A1%E6%9C%89%E5%AE%89%E8%A3%85-%E9%94%99%E8%AF%AF/"/>
    <id>http://yoursite.com/2019/07/27/%E6%89%BE%E4%B8%8D%E5%88%B0%E8%AF%B7%E6%B1%82%E7%9A%84-Net-Framework-Data-Provider-%E5%8F%AF%E8%83%BD%E6%B2%A1%E6%9C%89%E5%AE%89%E8%A3%85-%E9%94%99%E8%AF%AF/</id>
    <published>2019-07-27T16:23:27.000Z</published>
    <updated>2020-08-29T15:41:23.524Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h1><p>这几天在装.NET 的开发环境，在装好VS2013和Oracle 11g之后，做了一个测试项目，运行调试没问题<br>但是涉及到数据库相关操作，如新建数据集、连接数据库等在调试的时候则会出现如下错误：</p><p><img src="https://img-blog.csdn.net/20180724122125269?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTIzODI0MjU=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="找不到请求的 .Net Framework Data Provider。可能没有安装"></p><h1 id="目前百度之后现存的解决方案："><a href="#目前百度之后现存的解决方案：" class="headerlink" title="目前百度之后现存的解决方案："></a>目前百度之后现存的解决方案：</h1><ol><li><p>oracle odp.net 32位/64位版本的问题<br><a href="http://www.cnblogs.com/yjmyzz/archive/2011/04/19/2020793.html">解决方案链接</a>；当然如果觉得这篇写的不怎么清楚，还可以点击 <a href="https://www.cnblogs.com/gudi/p/6110875.html">这里</a><br><strong>*（我碰到的就是这个问题，但是据博主提供的方法没有解决问题）*</strong></p></li><li><p>Microsoft SQL Server Compact 4.0没有安装 这个问题是比较好解决的，只用安装Microsoft SQL Server Compact<br>4.0即可，具体可以点击<a href="https://blog.csdn.net/yuchou123456789/article/details/7031206">这里</a></p></li><li><p>还有修改machine.config配置文件的方法，大家也可以尝试<a href="http://qihuayu2010.blog.163.com/blog/static/18790015920138235546382/">点击这里</a></p><p>当然如果你的数据库使用的Oracle，节点配置的时候需要根据实际情况做出调整。<br>具体文件配置路径：C:\Windows\Microsoft.NET\Framework64\v4.0.30319\Config下面的machine.config<br>用记事本打开，查看下列节点是否存在oracle的相关配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;system.data&gt;</span><br><span class="line">    &lt;DbProviderFactories&gt;</span><br><span class="line">      &lt;add name&#x3D;&quot;ODP.NET, Managed Driver&quot; invariant&#x3D;&quot;Oracle.ManagedDataAccess.Client&quot; description&#x3D;&quot;Oracle Data Provider for .NET, Managed Driver&quot; type&#x3D;&quot;Oracle.ManagedDataAccess.Client.OracleClientFactory, Oracle.ManagedDataAccess, Version&#x3D;4.121.2.0, Culture&#x3D;neutral, PublicKeyToken&#x3D;89b483f429c47342&quot; &#x2F;&gt;</span><br><span class="line">      &lt;add name&#x3D;&quot;Microsoft SQL Server Compact Data Provider 4.0&quot; invariant&#x3D;&quot;System.Data.SqlServerCe.4.0&quot; description&#x3D;&quot;.NET Framework Data Provider for Microsoft SQL Server Compact&quot; type&#x3D;&quot;System.Data.SqlServerCe.SqlCeProviderFactory, System.Data.SqlServerCe, Version&#x3D;4.0.0.0, Culture&#x3D;neutral, PublicKeyToken&#x3D;89845dcd8080cc91&quot; &#x2F;&gt;</span><br><span class="line">    &lt;&#x2F;DbProviderFactories&gt;</span><br><span class="line">  &lt;&#x2F;system.data&gt;</span><br></pre></td></tr></table></figure><p>新添加的应该是这一块：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;add name&#x3D;&quot;ODP.NET, Managed Driver&quot; invariant&#x3D;&quot;Oracle.ManagedDataAccess.Client&quot; description&#x3D;&quot;Oracle Data Provider for .NET, Managed Driver&quot; type&#x3D;&quot;Oracle.ManagedDataAccess.Client.OracleClientFactory, Oracle.ManagedDataAccess, Version&#x3D;4.121.2.0, Culture&#x3D;neutral, PublicKeyToken&#x3D;89b483f429c47342&quot; &#x2F;&gt;</span><br></pre></td></tr></table></figure><h1 id="个人解决方案"><a href="#个人解决方案" class="headerlink" title="个人解决方案"></a>个人解决方案</h1><p>前面说过了，我尝试了上述的一些办法之后仍然没有解决问题，熬不住了我就去csdn的论坛发了帖，等了半个小时没人回复（可能是积分太少吧），无奈我就自己继续鼓捣了。想起来自己有一个 ODAC 12c的安装包，就直接点击安装了，安装完成之后重启VS，继续新建项目，配置数据库，调试之后竟然没有再继续报错，也就是说这个问题被我糊里糊涂解决了，哈哈哈~</p><p>写一篇记录一下，给各位一个借鉴也给自己一个教训。<br>下面提供ODAC 12c的下载地址</p><p>官方下载地址：<a href="http://www.oracle.com/technetwork/database/windows/downloads/index-090165.html">x64下载</a>、<a href="http://www.oracle.com/technetwork/topics/dotnet/utilsoft-086879.html">x86下载</a></p><p>如果没有oracle账号又或是账号无法登陆，可以通过这个<a href="https://pan.baidu.com/s/13JEqOxtnqwVIu1ohEKds2g">链接</a>下载， 密码：amvz</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;问题：&quot;&gt;&lt;a href=&quot;#问题：&quot; class=&quot;headerlink&quot; title=&quot;问题：&quot;&gt;&lt;/a&gt;问题：&lt;/h1&gt;&lt;p&gt;这几天在装.NET 的开发环境，在装好VS2013和Oracle 11g之后，做了一个测试项目，运行调试没问题&lt;br&gt;但是涉及到数据</summary>
      
    
    
    
    <category term="编程笔记" scheme="http://yoursite.com/categories/%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term=".Net" scheme="http://yoursite.com/tags/Net/"/>
    
  </entry>
  
  <entry>
    <title>讨论社区23  -  统一记录日志</title>
    <link href="http://yoursite.com/2019/07/22/%E8%AE%A8%E8%AE%BA%E7%A4%BE%E5%8C%BA23%20-%20%E7%BB%9F%E4%B8%80%E5%A4%84%E7%90%86%E6%97%A5%E5%BF%97/"/>
    <id>http://yoursite.com/2019/07/22/%E8%AE%A8%E8%AE%BA%E7%A4%BE%E5%8C%BA23%20-%20%E7%BB%9F%E4%B8%80%E5%A4%84%E7%90%86%E6%97%A5%E5%BF%97/</id>
    <published>2019-07-22T22:54:11.000Z</published>
    <updated>2020-08-29T15:41:23.524Z</updated>
    
    <content type="html"><![CDATA[<p><strong>需求</strong>：</p><ul><li>帖子模块</li><li>评论模块</li><li>消息模块</li></ul><p><strong>AOP的概念</strong>：</p><ul><li>Aspect Oriented Programing，即面向方面（切面）编程。</li><li>AOP是一种编程思想，是对OOP的补充，可以进一步提高编程的效率。</li></ul><p>![需求AOP解读](/images/讨论社区23 - 统一记录日志.assets/20191121213702.png)</p><p><strong>AOP的术语</strong>：</p><p>![AOP术语](/images/讨论社区23 - 统一记录日志.assets/20191121214201.png)</p><p><strong>AOP的实现</strong></p><ul><li>AspectJ<ul><li>AspectJ是语言级的实现，它扩展了Java语言，定义了AOP语法。</li><li>AspectJ在编译期织入代码，它有一个专门的编译器，用来生成遵守Java字节码规范的class文件。</li></ul></li><li>Spring AOP<ul><li>Spring AOP使用纯Java实现，它不需要专门的编译过程，也不需要特殊的类装载器。</li><li>Spring AOP在运行时通过代理的方式织入代码，只支持方法类型的连接点。</li><li>Spring支持对AspectJ的集成。</li></ul></li></ul><p><strong>Spring AOP</strong></p><ul><li>JDK动态代理<ul><li>Java提供的动态代理技术，可以在运行时创建接口的代理实例。</li><li>Spring AOP默认采用此种方式，在接口的代理实例中织入代码。</li></ul></li><li>CGLib动态代理<ul><li>采用底层的字节码技术，在运行时创建子类代理实例。</li><li>当目标对象不存在接口时，Spring AOP会采用此种方式，在子类实例中织入代码。</li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;需求&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;帖子模块&lt;/li&gt;
&lt;li&gt;评论模块&lt;/li&gt;
&lt;li&gt;消息模块&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;AOP的概念&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Aspect Oriented Pr</summary>
      
    
    
    
    <category term="讨论社区项目" scheme="http://yoursite.com/categories/%E8%AE%A8%E8%AE%BA%E7%A4%BE%E5%8C%BA%E9%A1%B9%E7%9B%AE/"/>
    
    <category term="编程笔记" scheme="http://yoursite.com/categories/%E8%AE%A8%E8%AE%BA%E7%A4%BE%E5%8C%BA%E9%A1%B9%E7%9B%AE/%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="日志处理" scheme="http://yoursite.com/tags/%E6%97%A5%E5%BF%97%E5%A4%84%E7%90%86/"/>
    
    <category term="Spring AOP" scheme="http://yoursite.com/tags/Spring-AOP/"/>
    
  </entry>
  
  <entry>
    <title>讨论社区22  -  统一处理异常</title>
    <link href="http://yoursite.com/2019/07/20/%E8%AE%A8%E8%AE%BA%E7%A4%BE%E5%8C%BA22%20-%20%E7%BB%9F%E4%B8%80%E8%AE%B0%E5%BD%95%E5%BC%82%E5%B8%B8/"/>
    <id>http://yoursite.com/2019/07/20/%E8%AE%A8%E8%AE%BA%E7%A4%BE%E5%8C%BA22%20-%20%E7%BB%9F%E4%B8%80%E8%AE%B0%E5%BD%95%E5%BC%82%E5%B8%B8/</id>
    <published>2019-07-20T23:52:14.000Z</published>
    <updated>2020-08-29T15:41:23.524Z</updated>
    
    <content type="html"><![CDATA[<ul><li><code>@ControllerAdvice</code><ul><li>用于修饰类，表示该类是Controller的全局配置类。</li><li>在此类中，可以对Controller进行如下三种全局配置：异常处理方案、绑定数据方案、绑定参数方案。</li></ul></li><li><code>@ExceptionHandler</code><ul><li>用于修饰方法，该方法会在Controller出现异常后被调用，用于处理捕获到的异常。</li></ul></li><li><code>@ModelAttribute</code><ul><li>用于修饰方法，该方法会在Controller方法执行前被调用，用于为Model对象绑定参数。</li></ul></li><li><code>@DataBinder</code><ul><li>用于修饰方法，该方法会在Controller方法执行前被调用，用于绑定参数的转换器。</li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;code&gt;@ControllerAdvice&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;用于修饰类，表示该类是Controller的全局配置类。&lt;/li&gt;
&lt;li&gt;在此类中，可以对Controller进行如下三种全局配置：异常处理方案、绑定数据方案、绑定参数方案。&lt;/li</summary>
      
    
    
    
    <category term="讨论社区项目" scheme="http://yoursite.com/categories/%E8%AE%A8%E8%AE%BA%E7%A4%BE%E5%8C%BA%E9%A1%B9%E7%9B%AE/"/>
    
    <category term="编程笔记" scheme="http://yoursite.com/categories/%E8%AE%A8%E8%AE%BA%E7%A4%BE%E5%8C%BA%E9%A1%B9%E7%9B%AE/%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="注解" scheme="http://yoursite.com/tags/%E6%B3%A8%E8%A7%A3/"/>
    
    <category term="异常处理" scheme="http://yoursite.com/tags/%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>讨论社区21  -  私信列表和发送私信</title>
    <link href="http://yoursite.com/2019/07/18/%E8%AE%A8%E8%AE%BA%E7%A4%BE%E5%8C%BA21%20-%20%E7%A7%81%E4%BF%A1%E5%88%97%E8%A1%A8%E5%92%8C%E5%8F%91%E9%80%81%E7%A7%81%E4%BF%A1/"/>
    <id>http://yoursite.com/2019/07/18/%E8%AE%A8%E8%AE%BA%E7%A4%BE%E5%8C%BA21%20-%20%E7%A7%81%E4%BF%A1%E5%88%97%E8%A1%A8%E5%92%8C%E5%8F%91%E9%80%81%E7%A7%81%E4%BF%A1/</id>
    <published>2019-07-18T21:22:14.000Z</published>
    <updated>2020-08-29T15:41:23.524Z</updated>
    
    <content type="html"><![CDATA[<h1 id="发送私信"><a href="#发送私信" class="headerlink" title="发送私信"></a>发送私信</h1><ul><li>发送私信<ul><li>采用异步的方式发送私信。</li><li>发送成功后刷新私信列表。</li></ul></li><li>设置已读<ul><li>访问私信详情时，将显示的私信设置为已读状态。</li></ul></li></ul><h1 id="私信列表"><a href="#私信列表" class="headerlink" title="私信列表"></a>私信列表</h1><ul><li>私信列表<ul><li>查询当前用户的会话列表，每个会话只显示一条最新的私信。</li><li>支持分页显示。</li></ul></li><li>私信详情<ul><li>查询某个会话所包含的私信。</li><li>支持分页显示。</li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;发送私信&quot;&gt;&lt;a href=&quot;#发送私信&quot; class=&quot;headerlink&quot; title=&quot;发送私信&quot;&gt;&lt;/a&gt;发送私信&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;发送私信&lt;ul&gt;
&lt;li&gt;采用异步的方式发送私信。&lt;/li&gt;
&lt;li&gt;发送成功后刷新私信列表。&lt;/li&gt;
&lt;/u</summary>
      
    
    
    
    <category term="讨论社区项目" scheme="http://yoursite.com/categories/%E8%AE%A8%E8%AE%BA%E7%A4%BE%E5%8C%BA%E9%A1%B9%E7%9B%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>讨论社区20  -  显示、添加评论</title>
    <link href="http://yoursite.com/2019/07/16/%E8%AE%A8%E8%AE%BA%E7%A4%BE%E5%8C%BA20%20-%20%E6%98%BE%E7%A4%BA%E3%80%81%E6%B7%BB%E5%8A%A0%E8%AF%84%E8%AE%BA/"/>
    <id>http://yoursite.com/2019/07/16/%E8%AE%A8%E8%AE%BA%E7%A4%BE%E5%8C%BA20%20-%20%E6%98%BE%E7%A4%BA%E3%80%81%E6%B7%BB%E5%8A%A0%E8%AF%84%E8%AE%BA/</id>
    <published>2019-07-16T22:23:14.000Z</published>
    <updated>2020-08-29T15:41:23.524Z</updated>
    
    <content type="html"><![CDATA[<h1 id="显示评论"><a href="#显示评论" class="headerlink" title="显示评论"></a>显示评论</h1><ul><li><p>数据层</p><ul><li>根据实体查询一页评论数据。</li><li>根据实体查询评论的数量。</li></ul></li><li><p>业务层</p><ul><li>处理查询评论的业务。</li><li>处理查询评论数量的业务。</li></ul></li><li><p>表现层</p><ul><li>显示帖子详情数据时，同时显示该帖子所有的评论数据。</li></ul><p>层层封装</p></li></ul><h1 id="添加评论"><a href="#添加评论" class="headerlink" title="添加评论"></a>添加评论</h1><ul><li><p>数据层</p><ul><li>增加评论数据。</li><li>修改帖子的评论数量。</li></ul></li><li><p>业务层</p><ul><li>处理添加评论的业务：先增加评论、再更新帖子的评论数量。</li></ul><p>使用声明式事务</p></li><li><p>表现层</p><ul><li>处理添加评论数据的请求。</li><li>设置添加评论的表单。</li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;显示评论&quot;&gt;&lt;a href=&quot;#显示评论&quot; class=&quot;headerlink&quot; title=&quot;显示评论&quot;&gt;&lt;/a&gt;显示评论&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;数据层&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;根据实体查询一页评论数据。&lt;/li&gt;
&lt;li&gt;根据实体查询评论的数量。&lt;</summary>
      
    
    
    
    <category term="讨论社区项目" scheme="http://yoursite.com/categories/%E8%AE%A8%E8%AE%BA%E7%A4%BE%E5%8C%BA%E9%A1%B9%E7%9B%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>讨论社区19  -  事务管理</title>
    <link href="http://yoursite.com/2019/07/14/%E8%AE%A8%E8%AE%BA%E7%A4%BE%E5%8C%BA19%20-%20%E4%BA%8B%E5%8A%A1%E7%AE%A1%E7%90%86/"/>
    <id>http://yoursite.com/2019/07/14/%E8%AE%A8%E8%AE%BA%E7%A4%BE%E5%8C%BA19%20-%20%E4%BA%8B%E5%8A%A1%E7%AE%A1%E7%90%86/</id>
    <published>2019-07-14T20:51:04.000Z</published>
    <updated>2020-08-29T15:41:23.524Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p><strong>回顾</strong></p><ul><li>什么是事务<ul><li>事务是由N步数据库操作序列组成的逻辑执行单元，这系列操作要么全执行，要么全放弃执行。</li></ul></li><li>事务的特性（ACID）<ul><li>原子性（Atomicity）：事务是应用中不可再分的最小执行体。</li><li>一致性（Consistency）：事务执行的结果，须使数据从一个一致性状态，变为另一个一致性状态。</li><li>隔离性（Isolation）：各个事务的执行互不干扰，任何事务的内部操作对其他的事务都是隔离的。</li><li>持久性（Durability）：事务一旦提交，对数据所做的任何改变都要记录到永久存储器中。</li></ul></li></ul><p><strong>事务的隔离性</strong></p><ul><li>常见的并发异常<ul><li>第一类丢失更新、第二类丢失更新。</li><li>脏读、不可重复读、幻读。</li></ul></li><li>常见的隔离级别<ul><li>Read Uncommitted：读取未提交的数据。</li><li>Read Committed：读取已提交的数据。</li><li>Repeatable Read：可重复读。</li><li>Serializable：串行化。</li></ul></li></ul><p><strong>第一类丢失更新</strong>：某一个事务的回滚，导致另外一个事务已更新的数据丢失了。</p><p><strong>第二类丢失更新</strong>：某一个事务的提交，导致另外一个事务已更新的数据丢失了。</p><p><strong>脏读</strong>：某一个事务，读取了另外一个事务未提交的数据。</p><p><strong>不可重复读</strong>：某一个事务，对同一个数据前后读取的结果不一致。</p><p><strong>幻读</strong>：某一个事务，对同一个表前后查询到的行数不一致。</p><p><strong>事务隔离级别</strong>：</p><p>![事务隔离级别](/images/讨论社区19 - 事务管理.assets/20191121211321.png)</p><p><strong>实现机制</strong></p><ul><li>悲观锁（数据库）<ul><li>共享锁（S锁）<br>事务A对某数据加了共享锁后，其他事务只能对该数据加共享锁，但不能加排他锁。</li><li>排他锁（X锁）<br>事务A对某数据加了排他锁后，其他事务对该数据既不能加共享锁，也不能加排他锁。</li></ul></li><li>乐观锁（自定义）<ul><li>版本号、时间戳等<br>在更新数据前，检查版本号是否发生变化。若变化则取消本次更新，否则就更新数据（版本号+1）。</li></ul></li></ul><p><strong>Spring事务管理</strong></p><ul><li><p>声明式事务</p><ul><li>通过XML配置，声明某方法的事务特征。</li><li>通过注解，声明某方法的事务特征。</li></ul></li><li><p>编程式事务</p><ul><li>通过 TransactionTemplate 管理事务，并通过它执行数据库的操作。</li></ul></li></ul></li></ul><p>demo：用户注册并发帖</p><p>1 使用@Transactional 注入</p><p>2 使用TransactionTemplate</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// REQUIRED: 支持当前事务(外部事务),如果不存在则创建新事务.</span></span><br><span class="line"><span class="comment">// REQUIRES_NEW: 创建一个新事务,并且暂停当前事务(外部事务).</span></span><br><span class="line"><span class="comment">// NESTED: 如果当前存在事务(外部事务),则嵌套在该事务中执行(独立的提交和回滚),否则就会REQUIRED一样.</span></span><br><span class="line"><span class="meta">@Transactional(isolation = Isolation.READ_COMMITTED, propagation = Propagation.REQUIRED)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">save1</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//新增用户</span></span><br><span class="line">    ....</span><br><span class="line">    <span class="comment">//新增帖子</span></span><br><span class="line">    ....</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> TransactionTemplate transactionTemplate;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">save2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    transactionTemplate.setIsolationLevel(TransactionDefinition.ISOLATION_READ_COMMITTED);</span><br><span class="line">    transactionTemplate.setPropagationBehavior(TransactionDefinition.PROPAGATION_REQUIRED);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> transactionTemplate.execute(<span class="keyword">new</span> TransactionCallback&lt;Object&gt;() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Object <span class="title">doInTransaction</span><span class="params">(TransactionStatus status)</span> </span>&#123;</span><br><span class="line">            <span class="comment">//新增用户</span></span><br><span class="line">            ....</span><br><span class="line">            <span class="comment">//新增帖子</span></span><br><span class="line">            ....</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;回顾&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;什么是事务&lt;ul&gt;
&lt;li&gt;事务是由N步数据库操作序列组成的逻辑执行单元，这系列操作要么全执行，要么全放弃执行。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;事务的特性（ACID）&lt;ul&gt;
&lt;</summary>
      
    
    
    
    <category term="讨论社区项目" scheme="http://yoursite.com/categories/%E8%AE%A8%E8%AE%BA%E7%A4%BE%E5%8C%BA%E9%A1%B9%E7%9B%AE/"/>
    
    
    <category term="事务" scheme="http://yoursite.com/tags/%E4%BA%8B%E5%8A%A1/"/>
    
    <category term="Mysql" scheme="http://yoursite.com/tags/Mysql/"/>
    
    <category term="事务隔离" scheme="http://yoursite.com/tags/%E4%BA%8B%E5%8A%A1%E9%9A%94%E7%A6%BB/"/>
    
    <category term="事务管理" scheme="http://yoursite.com/tags/%E4%BA%8B%E5%8A%A1%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>讨论社区18  -  帖子详情</title>
    <link href="http://yoursite.com/2019/07/12/%E8%AE%A8%E8%AE%BA%E7%A4%BE%E5%8C%BA18%20-%20%E5%B8%96%E5%AD%90%E8%AF%A6%E6%83%85/"/>
    <id>http://yoursite.com/2019/07/12/%E8%AE%A8%E8%AE%BA%E7%A4%BE%E5%8C%BA18%20-%20%E5%B8%96%E5%AD%90%E8%AF%A6%E6%83%85/</id>
    <published>2019-07-12T22:01:51.000Z</published>
    <updated>2020-08-29T15:41:23.524Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>DiscussPostMapper       定义DAO方法</p></li><li><p>DiscussPostService         业务层</p></li><li><p>DiscussPostController    控制层</p></li><li><p>index.html</p><ul><li>在帖子标题上增加访问详情页面的链接</li></ul></li><li><p>discuss-detail.html</p><ul><li>处理静态资源的访问路径</li><li>复用index.html的header区域</li><li>显示标题、作者、发布时间、帖子正文等内容</li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;p&gt;DiscussPostMapper       定义DAO方法&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;DiscussPostService         业务层&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;DiscussPostController    控制层&lt;/p</summary>
      
    
    
    
    <category term="讨论社区项目" scheme="http://yoursite.com/categories/%E8%AE%A8%E8%AE%BA%E7%A4%BE%E5%8C%BA%E9%A1%B9%E7%9B%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>讨论社区17  -  发布帖子功能实现</title>
    <link href="http://yoursite.com/2019/07/11/%E8%AE%A8%E8%AE%BA%E7%A4%BE%E5%8C%BA17%20-%20%E5%8F%91%E5%B8%83%E5%B8%96%E5%AD%90%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/"/>
    <id>http://yoursite.com/2019/07/11/%E8%AE%A8%E8%AE%BA%E7%A4%BE%E5%8C%BA17%20-%20%E5%8F%91%E5%B8%83%E5%B8%96%E5%AD%90%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/</id>
    <published>2019-07-11T23:21:11.000Z</published>
    <updated>2020-08-29T15:41:23.524Z</updated>
    
    <content type="html"><![CDATA[<ul><li>AJAX<ul><li>Asynchronous JavaScript and XML</li><li>异步的JavaScript与XML，不是一门新技术，只是一个新的术语。</li><li>使用AJAX，网页能够将增量更新呈现在页面上，而不需要刷新整个页面。</li><li>虽然X代表XML，但目前JSON的使用比XML更加普遍。</li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/Guide/AJAX">https://developer.mozilla.org/zh-CN/docs/Web/Guide/AJAX</a></li></ul></li><li>示例<ul><li>使用jQuery发送AJAX请求。</li></ul></li><li>实践<ul><li>采用AJAX请求，实现发布帖子的功能。</li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;AJAX&lt;ul&gt;
&lt;li&gt;Asynchronous JavaScript and XML&lt;/li&gt;
&lt;li&gt;异步的JavaScript与XML，不是一门新技术，只是一个新的术语。&lt;/li&gt;
&lt;li&gt;使用AJAX，网页能够将增量更新呈现在页面上，而不需要刷新整个页</summary>
      
    
    
    
    <category term="讨论社区项目" scheme="http://yoursite.com/categories/%E8%AE%A8%E8%AE%BA%E7%A4%BE%E5%8C%BA%E9%A1%B9%E7%9B%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>讨论社区16  -  过滤敏感词</title>
    <link href="http://yoursite.com/2019/07/09/%E8%AE%A8%E8%AE%BA%E7%A4%BE%E5%8C%BA16%20-%20%E8%BF%87%E6%BB%A4%E6%95%8F%E6%84%9F%E8%AF%8D/"/>
    <id>http://yoursite.com/2019/07/09/%E8%AE%A8%E8%AE%BA%E7%A4%BE%E5%8C%BA16%20-%20%E8%BF%87%E6%BB%A4%E6%95%8F%E6%84%9F%E8%AF%8D/</id>
    <published>2019-07-09T22:51:01.000Z</published>
    <updated>2020-08-29T15:41:23.524Z</updated>
    
    <content type="html"><![CDATA[<p>最直接：字符串替换 replace方法</p><blockquote><p>问题：敏感词数量多了怎么办？帖子字数很多怎么办？</p><p>生产一般使用前缀树过滤敏感词</p></blockquote><ul><li>前缀树</li></ul><ul><li>名称：Trie、字典树、查找树</li><li>特点：查找效率高，消耗内存大</li><li>应用：字符串检索、词频统计、字符串排序等</li></ul><ol><li>构建敏感词前缀树：根节点不存储任何信息，每一个敏感词从第一个字符开始，逐个加入树，前缀相同继续在其后添加字符，不相同则从根节点重新开启一颗子树，直至到叶子节点整个路径构成一个敏感词。</li><li>敏感词过滤：<ol><li>定义三个指针p，begin，end（p 指向树的根节点，begin 和 end 开始均指向待检测字符串的第一个位置）。</li><li>开始begin、end与 p 同时移动，遇到前缀树中第一层结点，begin停止不动，p 与end 继续移动，检查p 与end 能否匹配至叶子节点，如果是则替换begin 与end之间所有字符，然后begin 与 end 移到敏感词后一个位置，且p 指针归位到根节点；不是则p归位到根节点，begin 向前移动1位，end后退至begin 的位置，重新开始判断。</li><li>注意，在其中不是敏感词的字符存储到新的变量区不改变，敏感词用 特殊符号代替之后append到非敏感词后面。</li></ol></li></ol><ul><li><p>敏感词过滤器</p><ul><li>定义前缀树</li><li>根据敏感词，初始化前缀树</li><li>编写过滤敏感词的方法</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 前缀树</span></span><br><span class="line"><span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">TrieNode</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 关键词结束标识</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> isKeywordEnd = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 子节点(key是下级字符,value是下级节点)</span></span><br><span class="line">    <span class="keyword">private</span> Map&lt;Character, TrieNode&gt; subNodes = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isKeywordEnd</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> isKeywordEnd;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setKeywordEnd</span><span class="params">(<span class="keyword">boolean</span> keywordEnd)</span> </span>&#123;</span><br><span class="line">        isKeywordEnd = keywordEnd;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 添加子节点</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addSubNode</span><span class="params">(Character c, TrieNode node)</span> </span>&#123;</span><br><span class="line">        subNodes.put(c, node);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取子节点</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> TrieNode <span class="title">getSubNode</span><span class="params">(Character c)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> subNodes.get(c);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 替换符</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String REPLACEMENT = <span class="string">&quot;***&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 根节点</span></span><br><span class="line"><span class="keyword">private</span> TrieNode rootNode = <span class="keyword">new</span> TrieNode();</span><br><span class="line"></span><br><span class="line"><span class="meta">@PostConstruct</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> (</span><br><span class="line">        InputStream is = <span class="keyword">this</span>.getClass().getClassLoader().getResourceAsStream(<span class="string">&quot;sensitive-words.txt&quot;</span>); <span class="comment">//sensitive-words.txt存放在resource文件夹下，编译之后一定要在classes下能找到</span></span><br><span class="line">        BufferedReader reader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(is));</span><br><span class="line">    ) &#123;</span><br><span class="line">        String keyword;</span><br><span class="line">        <span class="keyword">while</span> ((keyword = reader.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">// 添加到前缀树</span></span><br><span class="line">            <span class="keyword">this</span>.addKeyword(keyword);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        logger.error(<span class="string">&quot;加载敏感词文件失败: &quot;</span> + e.getMessage());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将一个敏感词添加到前缀树中</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">addKeyword</span><span class="params">(String keyword)</span> </span>&#123;</span><br><span class="line">    TrieNode tempNode = rootNode;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; keyword.length(); i++) &#123;</span><br><span class="line">        <span class="keyword">char</span> c = keyword.charAt(i);</span><br><span class="line">        TrieNode subNode = tempNode.getSubNode(c);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (subNode == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">// 初始化子节点</span></span><br><span class="line">            subNode = <span class="keyword">new</span> TrieNode();</span><br><span class="line">            tempNode.addSubNode(c, subNode);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 指向子节点,进入下一轮循环</span></span><br><span class="line">        tempNode = subNode;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置结束标识</span></span><br><span class="line">        <span class="keyword">if</span> (i == keyword.length() - <span class="number">1</span>) &#123;</span><br><span class="line">            tempNode.setKeywordEnd(<span class="keyword">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 过滤敏感词</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> text 待过滤的文本</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@return</span> 过滤后的文本</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">filter</span><span class="params">(String text)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (StringUtils.isBlank(text)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 指针1</span></span><br><span class="line">    TrieNode tempNode = rootNode;</span><br><span class="line">    <span class="comment">// 指针2</span></span><br><span class="line">    <span class="keyword">int</span> begin = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 指针3</span></span><br><span class="line">    <span class="keyword">int</span> position = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 结果</span></span><br><span class="line">    StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (position &lt; text.length()) &#123;</span><br><span class="line">        <span class="keyword">char</span> c = text.charAt(position);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 跳过符号</span></span><br><span class="line">        <span class="keyword">if</span> (isSymbol(c)) &#123;</span><br><span class="line">            <span class="comment">// 若指针1处于根节点,将此符号计入结果,让指针2向下走一步</span></span><br><span class="line">            <span class="keyword">if</span> (tempNode == rootNode) &#123;</span><br><span class="line">                sb.append(c);</span><br><span class="line">                begin++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 无论符号在开头或中间,指针3都向下走一步</span></span><br><span class="line">            position++;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 检查下级节点</span></span><br><span class="line">        tempNode = tempNode.getSubNode(c);</span><br><span class="line">        <span class="keyword">if</span> (tempNode == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">// 以begin开头的字符串不是敏感词</span></span><br><span class="line">            sb.append(text.charAt(begin));</span><br><span class="line">            <span class="comment">// 进入下一个位置</span></span><br><span class="line">            position = ++begin;</span><br><span class="line">            <span class="comment">// 重新指向根节点</span></span><br><span class="line">            tempNode = rootNode;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (tempNode.isKeywordEnd()) &#123;</span><br><span class="line">            <span class="comment">// 发现敏感词,将begin~position字符串替换掉</span></span><br><span class="line">            sb.append(REPLACEMENT);</span><br><span class="line">            <span class="comment">// 进入下一个位置</span></span><br><span class="line">            begin = ++position;</span><br><span class="line">            <span class="comment">// 重新指向根节点</span></span><br><span class="line">            tempNode = rootNode;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 检查下一个字符</span></span><br><span class="line">            position++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将最后一批字符计入结果 position提前到终点，但begin没有到终点</span></span><br><span class="line">    sb.append(text.substring(begin));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> sb.toString();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断是否为符号</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isSymbol</span><span class="params">(Character c)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 0x2E80~0x9FFF 是东亚文字范围</span></span><br><span class="line">    <span class="keyword">return</span> !CharUtils.isAsciiAlphanumeric(c) &amp;&amp; (c &lt; <span class="number">0x2E80</span> || c &gt; <span class="number">0x9FFF</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最直接：字符串替换 replace方法&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;问题：敏感词数量多了怎么办？帖子字数很多怎么办？&lt;/p&gt;
&lt;p&gt;生产一般使用前缀树过滤敏感词&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;前缀树&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li</summary>
      
    
    
    
    <category term="讨论社区项目" scheme="http://yoursite.com/categories/%E8%AE%A8%E8%AE%BA%E7%A4%BE%E5%8C%BA%E9%A1%B9%E7%9B%AE/"/>
    
    
    <category term="Tire" scheme="http://yoursite.com/tags/Tire/"/>
    
  </entry>
  
  <entry>
    <title>讨论社区15  -  检查登录状态</title>
    <link href="http://yoursite.com/2019/07/08/%E8%AE%A8%E8%AE%BA%E7%A4%BE%E5%8C%BA15%20-%20%E6%A3%80%E6%9F%A5%E7%99%BB%E5%BD%95%E7%8A%B6%E6%80%81/"/>
    <id>http://yoursite.com/2019/07/08/%E8%AE%A8%E8%AE%BA%E7%A4%BE%E5%8C%BA15%20-%20%E6%A3%80%E6%9F%A5%E7%99%BB%E5%BD%95%E7%8A%B6%E6%80%81/</id>
    <published>2019-07-08T23:31:01.000Z</published>
    <updated>2020-08-29T15:41:23.524Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>使用拦截器</p><ul><li>在方法前标注自定义注解</li><li>拦截所有请求，只处理带有该注解的方法</li></ul></li><li><p>自定义注解</p><ul><li>常用的元注解：<br><code>@Target</code>、<code>@Retention</code>、<code>@Document</code>、<code>@Inherited</code></li></ul><blockquote><p><code>@Target</code>声明自定义注解的位置（类？方法？属性？）</p><p><code>@Retention</code>  自定义注解的有效时间（编译时？运行时？）</p><p><code>@Document</code>  生成文档是否携带注解？</p><p><code>@Inherited</code>  子类继承父类是否继承注解？</p></blockquote></li><li><p>如何读取注解：<br><code>Method.getDeclaredAnnotations ()</code>  //获取方法上所有注解<br><code>Method.getAnnotation (Class&lt;T&gt; annotationClass)</code></p></li></ul><p>项目中添加自定义注解：</p><ol><li>定义自定义注解的类，无需详细实现方法，只需声明为接口，且加上<code>@Target</code>、<code>@Retention</code></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.annotation.ElementType;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Retention;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.RetentionPolicy;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Target;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Target(ElementType.METHOD)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> LoginRequired &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>在需要使用的方法（如上则是在必须登录之后才能访问的路径处）加上<code>@LoginRequired</code></li><li>拦截器的使用逻辑，拦截有自定义注解的方法，进一步判断，符合则继续，不符合则拒绝</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.wx.talking.annotation.LoginRequired;</span><br><span class="line"><span class="keyword">import</span> com.wx.talking.util.HostHolder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.method.HandlerMethod;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.HandlerInterceptor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginRequiredInterceptor</span> <span class="keyword">implements</span> <span class="title">HandlerInterceptor</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> HostHolder hostHolder;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (handler <span class="keyword">instanceof</span> HandlerMethod) &#123;</span><br><span class="line">            HandlerMethod handlerMethod = (HandlerMethod) handler;</span><br><span class="line">            <span class="comment">// 获取拦截的对象</span></span><br><span class="line">            Method method = handlerMethod.getMethod();</span><br><span class="line">            LoginRequired loginRequired = method.getAnnotation(LoginRequired.class);</span><br><span class="line">            <span class="comment">// 需要登录但当前用户未登录，重定向到首页</span></span><br><span class="line">            <span class="keyword">if</span> (loginRequired != <span class="keyword">null</span> &amp;&amp; hostHolder.getUser() == <span class="keyword">null</span>) &#123;</span><br><span class="line">                response.sendRedirect(request.getContextPath() + <span class="string">&quot;/login&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置拦截器，不拦截静态文件等</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebMvcConfig</span> <span class="keyword">implements</span> <span class="title">WebMvcConfigurer</span> </span>&#123; </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span> </span>&#123;</span><br><span class="line"> registry.addInterceptor(loginRequiredInterceptor)</span><br><span class="line">                .excludePathPatterns(<span class="string">&quot;/**/*.css&quot;</span>, <span class="string">&quot;/**/*.js&quot;</span>, <span class="string">&quot;/**/*.png&quot;</span>, <span class="string">&quot;/**/*.jpg&quot;</span>, <span class="string">&quot;/**/*.jpeg&quot;</span>);</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;p&gt;使用拦截器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在方法前标注自定义注解&lt;/li&gt;
&lt;li&gt;拦截所有请求，只处理带有该注解的方法&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;自定义注解&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常用的元注解：&lt;br&gt;&lt;code&gt;@Target&lt;/</summary>
      
    
    
    
    <category term="讨论社区项目" scheme="http://yoursite.com/categories/%E8%AE%A8%E8%AE%BA%E7%A4%BE%E5%8C%BA%E9%A1%B9%E7%9B%AE/"/>
    
    
    <category term="拦截器" scheme="http://yoursite.com/tags/%E6%8B%A6%E6%88%AA%E5%99%A8/"/>
    
    <category term="注解" scheme="http://yoursite.com/tags/%E6%B3%A8%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>讨论社区14  -  账号设置</title>
    <link href="http://yoursite.com/2019/07/07/%E8%AE%A8%E8%AE%BA%E7%A4%BE%E5%8C%BA14%20-%20%E8%B4%A6%E5%8F%B7%E8%AE%BE%E7%BD%AE/"/>
    <id>http://yoursite.com/2019/07/07/%E8%AE%A8%E8%AE%BA%E7%A4%BE%E5%8C%BA14%20-%20%E8%B4%A6%E5%8F%B7%E8%AE%BE%E7%BD%AE/</id>
    <published>2019-07-07T21:35:01.000Z</published>
    <updated>2020-08-29T15:41:23.524Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>上传文件</p><ul><li>请求：必须是POST请求</li><li>表单：enctype=“multipart/form-data”</li><li>Spring MVC：通过 MultipartFile 处理上传文件</li></ul></li><li><p>开发步骤</p><ul><li>访问账号设置页面</li></ul><blockquote><p>Service定义访问路径，模板页修改</p></blockquote><ul><li>上传头像</li></ul><blockquote><p>定义上传路径</p><p>视图层更新</p></blockquote><ul><li>获取头像</li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;p&gt;上传文件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;请求：必须是POST请求&lt;/li&gt;
&lt;li&gt;表单：enctype=“multipart/form-data”&lt;/li&gt;
&lt;li&gt;Spring MVC：通过 MultipartFile 处理上传文件&lt;/li&gt;
&lt;/ul&gt;
</summary>
      
    
    
    
    <category term="讨论社区项目" scheme="http://yoursite.com/categories/%E8%AE%A8%E8%AE%BA%E7%A4%BE%E5%8C%BA%E9%A1%B9%E7%9B%AE/"/>
    
    
    <category term="Spring MVC" scheme="http://yoursite.com/tags/Spring-MVC/"/>
    
    <category term="MultipartFile" scheme="http://yoursite.com/tags/MultipartFile/"/>
    
  </entry>
  
  <entry>
    <title>讨论社区13  -  显示登录信息</title>
    <link href="http://yoursite.com/2019/07/05/%E8%AE%A8%E8%AE%BA%E7%A4%BE%E5%8C%BA13%20-%20%E6%98%BE%E7%A4%BA%E7%99%BB%E5%BD%95%E4%BF%A1%E6%81%AF/"/>
    <id>http://yoursite.com/2019/07/05/%E8%AE%A8%E8%AE%BA%E7%A4%BE%E5%8C%BA13%20-%20%E6%98%BE%E7%A4%BA%E7%99%BB%E5%BD%95%E4%BF%A1%E6%81%AF/</id>
    <published>2019-07-05T22:25:45.000Z</published>
    <updated>2020-08-29T15:41:23.524Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>拦截器示例</p><ul><li>定义拦截器，实现HandlerInterceptor</li><li>配置拦截器，为它指定拦截、排除的路径</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebMvcConfig</span> <span class="keyword">implements</span> <span class="title">WebMvcConfigurer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AlphaInterceptor alphaInterceptor;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> LoginTicketInterceptor loginTicketInterceptor;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> LoginRequiredInterceptor loginRequiredInterceptor;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span> </span>&#123;</span><br><span class="line">        registry.addInterceptor(alphaInterceptor)</span><br><span class="line">                .excludePathPatterns(<span class="string">&quot;/**/*.css&quot;</span>, <span class="string">&quot;/**/*.js&quot;</span>, <span class="string">&quot;/**/*.png&quot;</span>, <span class="string">&quot;/**/*.jpg&quot;</span>, <span class="string">&quot;/**/*.jpeg&quot;</span>)</span><br><span class="line">                .addPathPatterns(<span class="string">&quot;/register&quot;</span>, <span class="string">&quot;/login&quot;</span>);</span><br><span class="line"></span><br><span class="line">        registry.addInterceptor(loginTicketInterceptor)</span><br><span class="line">                .excludePathPatterns(<span class="string">&quot;/**/*.css&quot;</span>, <span class="string">&quot;/**/*.js&quot;</span>, <span class="string">&quot;/**/*.png&quot;</span>, <span class="string">&quot;/**/*.jpg&quot;</span>, <span class="string">&quot;/**/*.jpeg&quot;</span>);</span><br><span class="line"></span><br><span class="line">        registry.addInterceptor(loginRequiredInterceptor)</span><br><span class="line">                .excludePathPatterns(<span class="string">&quot;/**/*.css&quot;</span>, <span class="string">&quot;/**/*.js&quot;</span>, <span class="string">&quot;/**/*.png&quot;</span>, <span class="string">&quot;/**/*.jpg&quot;</span>, <span class="string">&quot;/**/*.jpeg&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>拦截器应用</p><ul><li>在请求开始时查询登录用户</li><li>在本次请求中持有用户数据</li></ul><blockquote><p>需要暂存用户数据，使用本地的类暂存？</p><p>Client访问Server是多线程的，多对一。所以存储用户数据的时候需要考虑多线程，如果仅简单存储用户数据，在并发情况下可能会造成数据混乱。</p><p><strong>线程隔离</strong> ThreadLocal</p></blockquote><ul><li>在模板视图上显示用户数据</li><li>在请求结束时清理用户数据</li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;p&gt;拦截器示例&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;定义拦截器，实现HandlerInterceptor&lt;/li&gt;
&lt;li&gt;配置拦截器，为它指定拦截、排除的路径&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;</summary>
      
    
    
    
    <category term="讨论社区项目" scheme="http://yoursite.com/categories/%E8%AE%A8%E8%AE%BA%E7%A4%BE%E5%8C%BA%E9%A1%B9%E7%9B%AE/"/>
    
    
    <category term="拦截器" scheme="http://yoursite.com/tags/%E6%8B%A6%E6%88%AA%E5%99%A8/"/>
    
    <category term="ThreadLocal" scheme="http://yoursite.com/tags/ThreadLocal/"/>
    
  </entry>
  
  <entry>
    <title>讨论社区12  -  登录、退出功能实现</title>
    <link href="http://yoursite.com/2019/07/04/%E8%AE%A8%E8%AE%BA%E7%A4%BE%E5%8C%BA12%20-%20%E7%99%BB%E5%BD%95%E3%80%81%E9%80%80%E5%87%BA%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/"/>
    <id>http://yoursite.com/2019/07/04/%E8%AE%A8%E8%AE%BA%E7%A4%BE%E5%8C%BA12%20-%20%E7%99%BB%E5%BD%95%E3%80%81%E9%80%80%E5%87%BA%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/</id>
    <published>2019-07-04T23:15:40.000Z</published>
    <updated>2020-08-29T15:41:23.524Z</updated>
    
    <content type="html"><![CDATA[<ul><li>访问登录页面<ul><li>点击顶部区域内的链接，打开登录页面。</li></ul></li><li>登录<ul><li>验证账号、密码、验证码。</li><li>成功时，生成登录凭证，发放给客户端。</li><li>失败时，跳转回登录页。</li></ul></li><li>退出<ul><li>将登录凭证修改为失效状态。</li><li>跳转至网站首页。</li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;访问登录页面&lt;ul&gt;
&lt;li&gt;点击顶部区域内的链接，打开登录页面。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;登录&lt;ul&gt;
&lt;li&gt;验证账号、密码、验证码。&lt;/li&gt;
&lt;li&gt;成功时，生成登录凭证，发放给客户端。&lt;/li&gt;
&lt;li&gt;失败时，跳转回登录页。&lt;/li</summary>
      
    
    
    
    <category term="讨论社区项目" scheme="http://yoursite.com/categories/%E8%AE%A8%E8%AE%BA%E7%A4%BE%E5%8C%BA%E9%A1%B9%E7%9B%AE/"/>
    
    
    <category term="Spring" scheme="http://yoursite.com/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>讨论社区11  -  图片验证码</title>
    <link href="http://yoursite.com/2019/07/02/%E8%AE%A8%E8%AE%BA%E7%A4%BE%E5%8C%BA11%20-%20%E5%9B%BE%E7%89%87%E9%AA%8C%E8%AF%81%E7%A0%81/"/>
    <id>http://yoursite.com/2019/07/02/%E8%AE%A8%E8%AE%BA%E7%A4%BE%E5%8C%BA11%20-%20%E5%9B%BE%E7%89%87%E9%AA%8C%E8%AF%81%E7%A0%81/</id>
    <published>2019-07-02T21:05:40.000Z</published>
    <updated>2020-08-29T15:41:23.524Z</updated>
    
    <content type="html"><![CDATA[<p>Kaptcha</p><ul><li>导入 jar 包</li><li>编写 Kaptcha 配置类</li><li>生成随机字符、生成图片</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Kaptcha&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;导入 jar 包&lt;/li&gt;
&lt;li&gt;编写 Kaptcha 配置类&lt;/li&gt;
&lt;li&gt;生成随机字符、生成图片&lt;/li&gt;
&lt;/ul&gt;
</summary>
      
    
    
    
    <category term="讨论社区项目" scheme="http://yoursite.com/categories/%E8%AE%A8%E8%AE%BA%E7%A4%BE%E5%8C%BA%E9%A1%B9%E7%9B%AE/"/>
    
    
    <category term="图片验证码" scheme="http://yoursite.com/tags/%E5%9B%BE%E7%89%87%E9%AA%8C%E8%AF%81%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>讨论社区10  -  会话管理</title>
    <link href="http://yoursite.com/2019/07/01/%E8%AE%A8%E8%AE%BA%E7%A4%BE%E5%8C%BA10%20-%20%E4%BC%9A%E8%AF%9D%E7%AE%A1%E7%90%86/"/>
    <id>http://yoursite.com/2019/07/01/%E8%AE%A8%E8%AE%BA%E7%A4%BE%E5%8C%BA10%20-%20%E4%BC%9A%E8%AF%9D%E7%AE%A1%E7%90%86/</id>
    <published>2019-07-01T20:15:21.000Z</published>
    <updated>2020-08-29T15:41:23.524Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>HTTP的基本性质</p><ul><li>HTTP是简单的</li><li>HTTP是可扩展的</li><li>HTTP是无状态的，有会话的</li></ul></li><li><p>Cookie</p><ul><li>是服务器发送到浏览器，并保存在浏览器端的一小块数据。</li><li>浏览器下次访问该服务器时，会自动携带块该数据，将其发送给服务器。</li></ul></li><li><p>Session</p><ul><li>是JavaEE的标准，用于在服务端记录客户端信息。</li><li>数据存放在服务端更加安全，但是也会增加服务端的内存压力。</li></ul><blockquote><p>Session 依赖于Cookie，Server在Client请求时生成Session（包含Client的一些信息），然后将携带SessionId的Cookie发送给Client</p><p>Client本地存储Cookie，下一次访问Server，服务器识别Client发送的Cookie中携带的SessionId，查找到属于特定Client的登录或其他信息。</p><p>以上可以综合Server和Client，不仅在一定程度上可以缓解双方压力，也能保证安全。</p><p>有必要就存，尽量使用Cookie，减小服务的压力。</p><p>分布式部署使用Session？</p><p>粘性Session——负载均衡不友好</p><p>同步Session——服务端需要同步Session，服务器之间有耦合</p><p>共享Session——单体Session服务器，服务器宕机会所有的都出现问题</p><p>以上可得出目前的处理方式：尽量存在Client端，否则存在服务端数据库。对于传统关系型数据可能仍然出现瓶颈，查询性能（内存中快，硬盘中慢）；但现在出现的NoSQL数据库（如Redis）可以很好的解决上述问题。</p></blockquote></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;p&gt;HTTP的基本性质&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HTTP是简单的&lt;/li&gt;
&lt;li&gt;HTTP是可扩展的&lt;/li&gt;
&lt;li&gt;HTTP是无状态的，有会话的&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Cookie&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;是服务器发送到浏览</summary>
      
    
    
    
    <category term="讨论社区项目" scheme="http://yoursite.com/categories/%E8%AE%A8%E8%AE%BA%E7%A4%BE%E5%8C%BA%E9%A1%B9%E7%9B%AE/"/>
    
    
    <category term="HTTP" scheme="http://yoursite.com/tags/HTTP/"/>
    
    <category term="Session" scheme="http://yoursite.com/tags/Session/"/>
    
    <category term="Cookie" scheme="http://yoursite.com/tags/Cookie/"/>
    
  </entry>
  
  <entry>
    <title>讨论社区09  -  注册功能实现</title>
    <link href="http://yoursite.com/2019/06/30/%E8%AE%A8%E8%AE%BA%E7%A4%BE%E5%8C%BA09%20-%20%E6%B3%A8%E5%86%8C%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/"/>
    <id>http://yoursite.com/2019/06/30/%E8%AE%A8%E8%AE%BA%E7%A4%BE%E5%8C%BA09%20-%20%E6%B3%A8%E5%86%8C%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/</id>
    <published>2019-06-30T22:21:21.000Z</published>
    <updated>2020-08-29T15:41:23.524Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>访问注册页面</p><ul><li>点击顶部区域内的链接，打开注册页面。</li></ul><blockquote><p>复用Thymeleaf的标签，复用头部区域</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">header</span> <span class="attr">class</span>=<span class="string">&quot;bg-dark sticky-top&quot;</span> <span class="attr">th:fragment</span>=<span class="string">&quot;header&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在需要复用的地方</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">header</span> <span class="attr">class</span>=<span class="string">&quot;bg-dark sticky-top&quot;</span> <span class="attr">th:replace</span>=<span class="string">&quot;index::header&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>提交注册数据</p><ul><li>通过表单提交数据。</li><li>服务端验证账号是否已存在、邮箱是否已注册。</li><li>服务端发送激活邮件。</li></ul></li><li><p>激活注册账号</p><ul><li>点击邮件中的链接，访问服务端的激活服务。</li></ul><blockquote><p>在Service处理，三种结果：激活成功、激活失败、重复激活</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">activation</span><span class="params">(<span class="keyword">int</span> userId, String code)</span> </span>&#123;</span><br><span class="line">        User user = userMapper.selectById(userId);</span><br><span class="line">        <span class="keyword">if</span> (user.getStatus() == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> ACTIVATION_REPEAT;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (user.getActivationCode().equals(code)) &#123;</span><br><span class="line">            userMapper.updateStatus(userId, <span class="number">1</span>);</span><br><span class="line">            clearCache(userId);</span><br><span class="line">            <span class="keyword">return</span> ACTIVATION_SUCCESS;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> ACTIVATION_FAILURE;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>LoginController处理请求</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(path = &quot;/activation/&#123;userId&#125;/&#123;code&#125;&quot;, method = RequestMethod.GET)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">activation</span><span class="params">(Model model, <span class="meta">@PathVariable(&quot;userId&quot;)</span> <span class="keyword">int</span> userId, <span class="meta">@PathVariable(&quot;code&quot;)</span> String code)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> result = userService.activation(userId, code);</span><br><span class="line">    <span class="keyword">if</span> (result == ACTIVATION_SUCCESS) &#123;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;msg&quot;</span>, <span class="string">&quot;激活成功,您的账号已经可以正常使用了!&quot;</span>);</span><br><span class="line">        model.addAttribute(<span class="string">&quot;target&quot;</span>, <span class="string">&quot;/login&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (result == ACTIVATION_REPEAT) &#123;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;msg&quot;</span>, <span class="string">&quot;无效操作,该账号已经激活过了!&quot;</span>);</span><br><span class="line">        model.addAttribute(<span class="string">&quot;target&quot;</span>, <span class="string">&quot;/index&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;msg&quot;</span>, <span class="string">&quot;激活失败,您提供的激活码不正确!&quot;</span>);</span><br><span class="line">        model.addAttribute(<span class="string">&quot;target&quot;</span>, <span class="string">&quot;/index&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;/site/operate-result&quot;</span>;<span class="comment">//返回信息到激活页面</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;p&gt;访问注册页面&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;点击顶部区域内的链接，打开注册页面。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;复用Thymeleaf的标签，复用头部区域&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlig</summary>
      
    
    
    
    <category term="讨论社区项目" scheme="http://yoursite.com/categories/%E8%AE%A8%E8%AE%BA%E7%A4%BE%E5%8C%BA%E9%A1%B9%E7%9B%AE/"/>
    
    
    <category term="JavaMailSender" scheme="http://yoursite.com/tags/JavaMailSender/"/>
    
    <category term="Thymeleaf" scheme="http://yoursite.com/tags/Thymeleaf/"/>
    
  </entry>
  
  <entry>
    <title>hexo快速开始</title>
    <link href="http://yoursite.com/2019/06/30/hexo%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/"/>
    <id>http://yoursite.com/2019/06/30/hexo%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</id>
    <published>2019-06-30T16:10:29.000Z</published>
    <updated>2020-08-29T15:41:23.524Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    <category term="随笔" scheme="http://yoursite.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="随笔" scheme="http://yoursite.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
</feed>
